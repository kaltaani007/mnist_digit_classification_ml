# -*- coding: utf-8 -*-
"""mnist_dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BM9E-CqboiWrW4w1FtHNxqGD3Z433oez
"""

import tensorflow
from tensorflow import keras
from tensorflow.keras import Sequential
from tensorflow.keras.layers import Dense , Flatten

(x_train , y_train ) , (x_test , y_test) = keras.datasets.mnist.load_data()

x_train.shape

len(x_train)

x_train[1]

import matplotlib.pyplot as plt
plt.imshow(x_train[0])

x_train = x_train / 255.
x_test = x_test / 255.

x_train[0]



model = Sequential()

model.add(Flatten(input_shape = (28 , 28)))
model.add(Dense(128 , activation = "relu"))
model.add(Dense(10 ,activation = 'softmax'))

model.summary()

model.compile(loss = "sparse_categorical_crossentropy" , optimizer = "Adam")

model.fit(x_train , y_train , epochs = 15 , validation_split = 0.2)

y_prob = model.predict(x_test)
y_prob

y_pred = y_prob.argmax(axis = 1)

from sklearn.metrics import accuracy_score

accuracy_score(y_test , y_pred)

# checking the model 
plt.imshow(x_test[0])

model.predict(x_test[0].reshape(1 , 28 , 28 )).argmax(axis = 1)

# checking the model 
plt.imshow(x_test[1])

model.predict(x_test[1].reshape(1 , 28 , 28)).argmax(axis = 1)

